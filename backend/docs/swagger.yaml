definitions:
  models.LoginRequest:
    properties:
      email:
        example: test@example.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.Note:
    properties:
      archived:
        type: boolean
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      memoryLevel:
        type: integer
      next_review_at:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.NoteInput:
    properties:
      content:
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - content
    - title
    type: object
  models.RegisterRequest:
    properties:
      email:
        example: test@example.com
        type: string
      nickname:
        example: CoolUser
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.ReviewInput:
    properties:
      remembered:
        type: boolean
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      nickname:
        type: string
      subscription_status:
        type: string
    type: object
info:
  contact: {}
  title: Simple Swagger Example
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя по email и паролю, возвращает JWT-токен
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход и токен
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверный email или пароль
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /auth/logout:
    post:
      description: Инвалидирует токен на клиенте (сервер токены не хранит)
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Выход из системы
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Возвращает данные пользователя на основе JWT-токена
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить текущего пользователя
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя по email, паролю и нику
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
  /notes:
    get:
      description: Возвращает список заметок текущего пользователя. Поддерживаются
        параметры поиска и сортировки.
      parameters:
      - description: Поиск по заголовку или содержимому
        in: query
        name: search
        type: string
      - default: created_at
        description: 'Поле сортировки: created_at (дата создания), next_review_at
          (дата следующего повторения)'
        enum:
        - created_at
        - next_review_at
        in: query
        name: sort_by
        type: string
      - default: desc
        description: 'Порядок сортировки: asc (по возрастанию), desc (по убыванию)'
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заметки пользователя с фильтрацией и сортировкой
      tags:
      - notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные заметки
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.NoteInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать новую заметку
      tags:
      - notes
  /notes/{id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить заметку
      tags:
      - notes
    get:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заметку по ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Обновлённые данные заметки
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.NoteInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить заметку
      tags:
      - notes
  /notes/{id}/archive:
    post:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Архивировать заметку
      tags:
      - notes
  /notes/{id}/review:
    post:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Вспомнил или нет
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить память (review) по заметке
      tags:
      - notes
securityDefinitions:
  BearerAuth:
    description: backend API для проекта
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
