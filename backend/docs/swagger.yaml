definitions:
  dto.AssignFolderInput:
    properties:
      folder_id:
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type: string
    required:
    - folder_id
    type: object
  dto.BatchAssignFolderInput:
    properties:
      folder_id:
        description: null → убрать связь
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type: string
      note_ids:
        example:
        - '["a12b34cd-5678-90ef-1234-567890abcdef"'
        - ' "b34c56de-7890-12gh-3456-789012ijklmn"]'
        items:
          type: string
        type: array
    required:
    - note_ids
    type: object
  dto.FolderCreateInput:
    properties:
      name:
        maxLength: 200
        minLength: 1
        type: string
      parent_id:
        type: string
    required:
    - name
    type: object
  dto.FolderNode:
    properties:
      children:
        items:
          $ref: '#/definitions/dto.FolderNode'
        type: array
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  dto.FolderUpdateInput:
    properties:
      name:
        maxLength: 200
        minLength: 1
        type: string
      parent_id:
        type: string
    type: object
  dto.NoteInput:
    properties:
      content:
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - content
    - title
    type: object
  dto.PaginatedNotes:
    properties:
      notes:
        items:
          $ref: '#/definitions/models.Note'
        type: array
      total:
        type: integer
    type: object
  dto.ReviewInput:
    properties:
      remembered:
        type: boolean
    type: object
  dto.ReviewSessionInput:
    properties:
      folder_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      limit:
        example: 10
        maximum: 100
        minimum: 1
        type: integer
      tag_ids:
        example:
        - 550e8400-e29b-41d4-a716-446655440001
        - 550e8400-e29b-41d4-a716-446655440002
        items:
          type: string
        type: array
    type: object
  dto.ReviewSessionNote:
    properties:
      content:
        type: string
      created_at:
        type: string
      folder_id:
        type: string
      folder_name:
        type: string
      id:
        type: string
      memory_level:
        type: integer
      next_review_at:
        type: string
      tags:
        items:
          $ref: '#/definitions/dto.Tag'
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.ReviewSessionResponse:
    properties:
      notes:
        items:
          $ref: '#/definitions/dto.ReviewSessionNote'
        type: array
      total:
        type: integer
    type: object
  dto.Tag:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.TagCreateInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.TagUpdateInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.Folder:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        example: test@example.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.Note:
    properties:
      archived:
        type: boolean
      content:
        type: string
      created_at:
        type: string
      folder:
        $ref: '#/definitions/models.Folder'
      folder_id:
        type: string
      id:
        type: string
      memoryLevel:
        type: integer
      next_review_at:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        example: test@example.com
        type: string
      nickname:
        example: CoolUser
        type: string
      password:
        example: "123456"
        type: string
    type: object
  models.Tag:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      nickname:
        type: string
      subscription_status:
        type: string
    type: object
info:
  contact: {}
  title: Simple Swagger Example
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя по email и паролю, возвращает JWT-токен
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход и токен
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверный email или пароль
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /auth/logout:
    post:
      description: Инвалидирует токен на клиенте (сервер токены не хранит)
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Выход из системы
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Возвращает данные пользователя на основе JWT-токена
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить текущего пользователя
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя по email, паролю и нику
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
  /folders:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные папки
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/dto.FolderCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Folder'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать папку
      tags:
      - folders
  /folders/{id}:
    delete:
      parameters:
      - description: Folder ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить папку (с каскадом заметок и подпапок)
      tags:
      - folders
    put:
      consumes:
      - application/json
      parameters:
      - description: Folder ID
        in: path
        name: id
        required: true
        type: string
      - description: Обновлённые данные папки
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/dto.FolderUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Folder'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить папку
      tags:
      - folders
  /folders/tree:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.FolderNode'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить дерево папок пользователя
      tags:
      - folders
  /notes:
    get:
      description: Возвращает список заметок текущего пользователя. Поддерживаются
        параметры поиска и сортировки.
      parameters:
      - description: Поиск по заголовку или содержимому
        in: query
        name: search
        type: string
      - default: created_at
        description: 'Поле сортировки: created_at (дата создания), next_review_at
          (дата следующего повторения)'
        enum:
        - created_at
        - next_review_at
        in: query
        name: sort_by
        type: string
      - default: desc
        description: 'Порядок сортировки: asc (по возрастанию), desc (по убыванию)'
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - default: 10
        description: Максимальное количество записей
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: Смещение для пагинации
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: ID папки для фильтрации заметок по папке
        in: query
        name: folder_id
        type: string
      - collectionFormat: csv
        description: Массив ID тегов для фильтрации заметок по тегам (через tag_ids[]=id1&tag_ids[]=id2)
        in: query
        items:
          type: string
        name: tag_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PaginatedNotes'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заметки пользователя с фильтрацией и сортировкой
      tags:
      - notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные заметки
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/dto.NoteInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать новую заметку
      tags:
      - notes
  /notes/{id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить заметку
      tags:
      - notes
    get:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить заметку по ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Обновлённые данные заметки
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/dto.NoteInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить заметку
      tags:
      - notes
  /notes/{id}/archive:
    post:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Архивировать заметку
      tags:
      - notes
  /notes/{id}/folders:
    post:
      consumes:
      - application/json
      description: Link a note to a folder (each note can belong to only one folder).
      parameters:
      - description: Note ID
        example: '"a12b34cd-5678-90ef-1234-567890abcdef"'
        in: path
        name: id
        required: true
        type: string
      - description: Folder assignment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.AssignFolderInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Assign a folder to a note
      tags:
      - notes
  /notes/{id}/folders/{folderId}:
    delete:
      description: Unlink a note from its folder.
      parameters:
      - description: Note ID
        example: '"a12b34cd-5678-90ef-1234-567890abcdef"'
        in: path
        name: id
        required: true
        type: string
      - description: Folder ID
        example: '"d290f1ee-6c54-4b01-90e6-d701748f0851"'
        in: path
        name: folderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove folder from a note
      tags:
      - notes
  /notes/{id}/review:
    post:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Вспомнил или нет
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить память (review) по заметке
      tags:
      - notes
  /notes/{id}/tags/{tagId}:
    delete:
      parameters:
      - description: Note ID
        example: '"a12b34cd-5678-90ef-1234-567890abcdef"'
        in: path
        name: id
        required: true
        type: string
      - description: Tag ID
        example: '"b23c45de-6789-01fg-2345-678901bcdefg"'
        in: path
        name: tagId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить тег у заметки
      tags:
      - note-tags
    post:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        example: '"a12b34cd-5678-90ef-1234-567890abcdef"'
        in: path
        name: id
        required: true
        type: string
      - description: Tag ID
        example: '"b23c45de-6789-01fg-2345-678901bcdefg"'
        in: path
        name: tagId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Добавить тег к заметке
      tags:
      - note-tags
  /notes/{id}/unarchive:
    post:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Разархивировать заметку
      tags:
      - notes
  /notes/batch/folders:
    post:
      consumes:
      - application/json
      description: Mass update notes to link or unlink them from a folder.
      parameters:
      - description: Batch folder assignment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.BatchAssignFolderInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Batch assign or remove folder for multiple notes
      tags:
      - notes
  /notes/tags/batch:
    post:
      consumes:
      - application/json
      parameters:
      - description: Массив связей заметка-тег
        in: body
        name: input
        required: true
        schema:
          items:
            type: object
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Массовое добавление тегов к заметкам
      tags:
      - note-tags
  /review/sessions:
    post:
      consumes:
      - application/json
      description: Создает сессию повторения с фильтрацией по папке и тегам. Возвращает
        заметки готовые к повторению, при нехватке добавляет случайные заметки.
      parameters:
      - description: Параметры сессии повторения
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ReviewSessionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReviewSessionResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать сессию повторения
      tags:
      - review-sessions
  /tags:
    get:
      description: Получает список всех тегов пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Список тегов
      tags:
      - tags
    post:
      consumes:
      - application/json
      description: Создаёт новый тег для пользователя
      parameters:
      - description: Данные тега
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.TagCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать тег
      tags:
      - tags
  /tags/{id}:
    delete:
      description: Удаляет тег по ID
      parameters:
      - description: ID тега
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Тег удалён
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить тег
      tags:
      - tags
    get:
      description: Получает тег по ID (если принадлежит пользователю)
      parameters:
      - description: ID тега
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить тег
      tags:
      - tags
    put:
      consumes:
      - application/json
      description: Обновляет имя тега по ID
      parameters:
      - description: ID тега
        in: path
        name: id
        required: true
        type: string
      - description: Новые данные
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.TagUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить тег
      tags:
      - tags
securityDefinitions:
  BearerAuth:
    description: backend API для проекта
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
