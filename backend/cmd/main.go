// @title Simple Swagger Example
// @version 1.0
// @description –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä API —Å Swagger
// @host localhost:8080
// @BasePath /

package main

import (
	"fmt"
	"log"
    "net/http"

    "github.com/gin-gonic/gin"
	"my_app_backend/internal/db"
    "github.com/swaggo/gin-swagger"
    "github.com/swaggo/files"
    _ "my_app_backend/docs"
)

// Error handler func
func handleError(c *gin.Context, statusCode int, message string) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON —Å –æ—à–∏–±–∫–æ–π
    c.JSON(statusCode, gin.H{
        "error": message,
    })
}

// @Summary –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
// @ID ping
// @Description –¢–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
// @Tags health
// @Produce json
// @Success 200 {object} map[string]string
// @Failure 500 {object} map[string]string
// @Router /ping [get]
func pingHandler(c *gin.Context) {
    simulatedError := false
    if simulatedError {
        c.JSON(http.StatusInternalServerError, gin.H{"error": "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"})
        return
    }
    c.JSON(http.StatusOK, gin.H{"message": "pong"})
}

func main() {
	fmt.Println("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	db.ConnectDB()

	// –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Gin
	router := gin.Default()

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–∏–Ω–≥–∞
	router.GET("/ping", pingHandler)

	// Swagger UI –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É /swagger/index.html
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
	if err := router.Run(":8080"); err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ", err)
	}
}
